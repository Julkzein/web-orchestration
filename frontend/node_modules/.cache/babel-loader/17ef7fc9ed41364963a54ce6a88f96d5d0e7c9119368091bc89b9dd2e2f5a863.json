{"ast":null,"code":"var _jsxFileName = \"/Users/jules/Desktop/orchestration-graph-web/frontend/src/App.tsx\",\n  _s = $RefreshSig$();\n// frontend/src/App.tsx\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport ActivityLibrary from './components/ActivityLibrary';\nimport GraphCanvas from './components/GraphCanvas';\nimport LessonTimeline from './components/LessonTimeline';\nimport Toolbar from './components/Toolbar';\nimport { api } from './services/api';\nimport GapSelector from './components/GapSelector';\nimport RecommendationPanel from './components/RecommendationPanel';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [activities, setActivities] = useState([]);\n  const [isConnected, setIsConnected] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [totalTime, setTotalTime] = useState(0);\n  const [budgetTime] = useState(120);\n  const [orchestrationState, setOrchestrationState] = useState(null);\n  const [selectedGap, setSelectedGap] = useState(null);\n  const [recommendations, setRecommendations] = useState([]);\n  const checkBackendConnection = useCallback(async () => {\n    try {\n      const result = await api.healthCheck();\n      console.log('Backend connected:', result);\n      setIsConnected(true);\n    } catch (error) {\n      console.error('Backend not connected:', error);\n      setIsConnected(false);\n    }\n  }, []);\n  const loadActivities = useCallback(async () => {\n    try {\n      const data = await api.getActivities();\n      setActivities(data);\n      console.log('Loaded activities:', data);\n    } catch (error) {\n      console.error('Failed to load activities:', error);\n      setActivities([{\n        id: '1',\n        name: 'Introduction',\n        type: 'general',\n        duration: 15,\n        color: '#4CAF50'\n      }, {\n        id: '2',\n        name: 'Main Activity',\n        type: 'general',\n        duration: 30,\n        color: '#2196F3'\n      }, {\n        id: '3',\n        name: 'Discussion',\n        type: 'general',\n        duration: 20,\n        color: '#FF9800'\n      }, {\n        id: '4',\n        name: 'Conclusion',\n        type: 'general',\n        duration: 10,\n        color: '#9C27B0'\n      }]);\n    }\n  }, []);\n  useEffect(() => {\n    const initializeApp = async () => {\n      setLoading(true);\n      await checkBackendConnection();\n      await loadActivities();\n      setLoading(false);\n    };\n    initializeApp();\n  }, [checkBackendConnection, loadActivities]);\n  const handleGapSelect = async gapIndex => {\n    setSelectedGap(gapIndex);\n    try {\n      const result = await api.setGapFocus(gapIndex);\n      setRecommendations(result.recommendations || []);\n    } catch (error) {\n      console.error('Error selecting gap:', error);\n    }\n  };\n  const handleAutoAddFromGap = async () => {\n    try {\n      const result = await api.autoAddFromGap();\n      if (result) {\n        setOrchestrationState(result);\n        // Refresh recommendations\n        if (selectedGap !== null) {\n          handleGapSelect(selectedGap);\n        }\n      }\n    } catch (error) {\n      console.error('Error auto-adding:', error);\n    }\n  };\n  const handleRecommend = async () => {\n    try {\n      // Get current orchestration state\n      const state = await api.getOrchestrationState();\n      setOrchestrationState(state);\n      if (state.hardGapsCount > 0) {\n        // Select the first hard gap\n        const firstGap = state.hardGapsList[0];\n        handleGapSelect(firstGap);\n      } else {\n        alert('✅ No gaps to fill - orchestration is complete!');\n      }\n    } catch (error) {\n      console.error('Recommendation failed:', error);\n      // Fallback to simple recommendation\n      const randomActivity = activities[Math.floor(Math.random() * activities.length)];\n      if (window.confirm(`Add recommended activity: ${randomActivity.name}?`)) {\n        // You can implement adding the activity here\n        console.log('Add activity:', randomActivity);\n      }\n    }\n  };\n  const handleSave = async () => {\n    const filename = prompt('Enter filename:', 'my_orchestration.json');\n    if (filename) {\n      try {\n        const result = await api.saveOrchestration(filename);\n        alert(result.message);\n      } catch (error) {\n        console.error('Save failed:', error);\n        alert('Could not save orchestration');\n      }\n    }\n  };\n  const handleLoad = async () => {\n    const filename = prompt('Enter filename to load:', 'my_orchestration.json');\n    if (filename) {\n      try {\n        const result = await api.loadOrchestration(filename);\n        alert(result.message);\n      } catch (error) {\n        console.error('Load failed:', error);\n        alert('Could not load orchestration');\n      }\n    }\n  };\n  const handlePrint = async () => {\n    try {\n      const result = await api.printOrchestration();\n      const printWindow = window.open('', '_blank');\n      if (printWindow) {\n        printWindow.document.write('<pre>' + result.content + '</pre>');\n        printWindow.document.close();\n        printWindow.print();\n      }\n    } catch (error) {\n      console.error('Print failed:', error);\n      alert('Could not print orchestration');\n    }\n  };\n  const handleReset = () => {\n    if (window.confirm('Reset all activities?')) {\n      window.location.reload();\n    }\n  };\n  const handleValidate = async () => {\n    try {\n      const result = await api.validateOrchestration({});\n      if (result.valid) {\n        alert('✅ Orchestration is valid!');\n      } else {\n        alert(`❌ Validation errors:\\n${result.errors.join('\\n')}`);\n      }\n    } catch (error) {\n      console.error('Validation failed:', error);\n    }\n  };\n  const handleGraphUpdate = nodes => {\n    // Update orchestration state based on graph changes\n    console.log('Graph updated with nodes:', nodes);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '100vh'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(DndProvider, {\n    backend: HTML5Backend,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"\\uD83C\\uDFAF Orchestration Graph Scheduler\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: isConnected ? 'connected' : 'disconnected',\n          children: [\"Backend: \", isConnected ? '✅ Connected' : '❌ Disconnected']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Toolbar, {\n        onSave: handleSave,\n        onLoad: handleLoad,\n        onPrint: handlePrint,\n        onRecommend: handleRecommend,\n        onReset: handleReset,\n        onValidate: handleValidate,\n        totalTime: totalTime,\n        budgetTime: budgetTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sidebar\",\n          children: [/*#__PURE__*/_jsxDEV(ActivityLibrary, {\n            activities: activities\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this), orchestrationState && /*#__PURE__*/_jsxDEV(GapSelector, {\n            gaps: orchestrationState.hardGapsList || [],\n            selectedGap: selectedGap,\n            onGapSelect: handleGapSelect\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 15\n          }, this), recommendations.length > 0 && /*#__PURE__*/_jsxDEV(RecommendationPanel, {\n            recommendations: recommendations,\n            onSelectActivity: idx => {\n              console.log('Add activity:', idx);\n            },\n            onAutoAdd: handleAutoAddFromGap\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"main-content\",\n          children: [/*#__PURE__*/_jsxDEV(GraphCanvas, {\n            onTimeUpdate: setTotalTime,\n            onGraphUpdate: handleGraphUpdate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(LessonTimeline, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 191,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Uba1VRN961y/L0jH71HNUvChh3w=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","DndProvider","HTML5Backend","ActivityLibrary","GraphCanvas","LessonTimeline","Toolbar","api","GapSelector","RecommendationPanel","jsxDEV","_jsxDEV","App","_s","activities","setActivities","isConnected","setIsConnected","loading","setLoading","totalTime","setTotalTime","budgetTime","orchestrationState","setOrchestrationState","selectedGap","setSelectedGap","recommendations","setRecommendations","checkBackendConnection","result","healthCheck","console","log","error","loadActivities","data","getActivities","id","name","type","duration","color","initializeApp","handleGapSelect","gapIndex","setGapFocus","handleAutoAddFromGap","autoAddFromGap","handleRecommend","state","getOrchestrationState","hardGapsCount","firstGap","hardGapsList","alert","randomActivity","Math","floor","random","length","window","confirm","handleSave","filename","prompt","saveOrchestration","message","handleLoad","loadOrchestration","handlePrint","printOrchestration","printWindow","open","document","write","content","close","print","handleReset","location","reload","handleValidate","validateOrchestration","valid","errors","join","handleGraphUpdate","nodes","style","display","justifyContent","alignItems","height","children","fileName","_jsxFileName","lineNumber","columnNumber","backend","className","onSave","onLoad","onPrint","onRecommend","onReset","onValidate","gaps","onGapSelect","onSelectActivity","idx","onAutoAdd","onTimeUpdate","onGraphUpdate","_c","$RefreshReg$"],"sources":["/Users/jules/Desktop/orchestration-graph-web/frontend/src/App.tsx"],"sourcesContent":["// frontend/src/App.tsx\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport ActivityLibrary from './components/ActivityLibrary';\nimport GraphCanvas from './components/GraphCanvas';\nimport LessonTimeline from './components/LessonTimeline';\nimport Toolbar from './components/Toolbar';\nimport { api } from './services/api';\nimport GapSelector from './components/GapSelector';\nimport RecommendationPanel from './components/RecommendationPanel';\nimport { Activity } from './types';\nimport './App.css';\n\nfunction App() {\n  const [activities, setActivities] = useState<Activity[]>([]);\n  const [isConnected, setIsConnected] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [totalTime, setTotalTime] = useState(0);\n  const [budgetTime] = useState(120);\n  const [orchestrationState, setOrchestrationState] = useState<any>(null);\n  const [selectedGap, setSelectedGap] = useState<number | null>(null);\n  const [recommendations, setRecommendations] = useState<any[]>([]);\n\n  const checkBackendConnection = useCallback(async () => {\n    try {\n      const result = await api.healthCheck();\n      console.log('Backend connected:', result);\n      setIsConnected(true);\n    } catch (error) {\n      console.error('Backend not connected:', error);\n      setIsConnected(false);\n    }\n  }, []);\n\n  const loadActivities = useCallback(async () => {\n    try {\n      const data = await api.getActivities();\n      setActivities(data);\n      console.log('Loaded activities:', data);\n    } catch (error) {\n      console.error('Failed to load activities:', error);\n      setActivities([\n        { id: '1', name: 'Introduction', type: 'general', duration: 15, color: '#4CAF50' },\n        { id: '2', name: 'Main Activity', type: 'general', duration: 30, color: '#2196F3' },\n        { id: '3', name: 'Discussion', type: 'general', duration: 20, color: '#FF9800' },\n        { id: '4', name: 'Conclusion', type: 'general', duration: 10, color: '#9C27B0' },\n      ]);\n    }\n  }, []);\n\n  useEffect(() => {\n    const initializeApp = async () => {\n      setLoading(true);\n      await checkBackendConnection();\n      await loadActivities();\n      setLoading(false);\n    };\n    \n    initializeApp();\n  }, [checkBackendConnection, loadActivities]);\n\n  const handleGapSelect = async (gapIndex: number) => {\n    setSelectedGap(gapIndex);\n    try {\n      const result = await api.setGapFocus(gapIndex);\n      setRecommendations(result.recommendations || []);\n    } catch (error) {\n      console.error('Error selecting gap:', error);\n    }\n  };\n\n  const handleAutoAddFromGap = async () => {\n    try {\n      const result = await api.autoAddFromGap();\n      if (result) {\n        setOrchestrationState(result);\n        // Refresh recommendations\n        if (selectedGap !== null) {\n          handleGapSelect(selectedGap);\n        }\n      }\n    } catch (error) {\n      console.error('Error auto-adding:', error);\n    }\n  };\n\n  const handleRecommend = async () => {\n    try {\n      // Get current orchestration state\n      const state = await api.getOrchestrationState();\n      setOrchestrationState(state);\n      \n      if (state.hardGapsCount > 0) {\n        // Select the first hard gap\n        const firstGap = state.hardGapsList[0];\n        handleGapSelect(firstGap);\n      } else {\n        alert('✅ No gaps to fill - orchestration is complete!');\n      }\n    } catch (error) {\n      console.error('Recommendation failed:', error);\n      // Fallback to simple recommendation\n      const randomActivity = activities[Math.floor(Math.random() * activities.length)];\n      if (window.confirm(`Add recommended activity: ${randomActivity.name}?`)) {\n        // You can implement adding the activity here\n        console.log('Add activity:', randomActivity);\n      }\n    }\n  };\n\n  const handleSave = async () => {\n    const filename = prompt('Enter filename:', 'my_orchestration.json');\n    if (filename) {\n      try {\n        const result = await api.saveOrchestration(filename);\n        alert(result.message);\n      } catch (error) {\n        console.error('Save failed:', error);\n        alert('Could not save orchestration');\n      }\n    }\n  };\n\n  const handleLoad = async () => {\n    const filename = prompt('Enter filename to load:', 'my_orchestration.json');\n    if (filename) {\n      try {\n        const result = await api.loadOrchestration(filename);\n        alert(result.message);\n      } catch (error) {\n        console.error('Load failed:', error);\n        alert('Could not load orchestration');\n      }\n    }\n  };\n\n  const handlePrint = async () => {\n    try {\n      const result = await api.printOrchestration();\n      const printWindow = window.open('', '_blank');\n      if (printWindow) {\n        printWindow.document.write('<pre>' + result.content + '</pre>');\n        printWindow.document.close();\n        printWindow.print();\n      }\n    } catch (error) {\n      console.error('Print failed:', error);\n      alert('Could not print orchestration');\n    }\n  };\n\n  const handleReset = () => {\n    if (window.confirm('Reset all activities?')) {\n      window.location.reload();\n    }\n  };\n\n  const handleValidate = async () => {\n    try {\n      const result = await api.validateOrchestration({});\n      if (result.valid) {\n        alert('✅ Orchestration is valid!');\n      } else {\n        alert(`❌ Validation errors:\\n${result.errors.join('\\n')}`);\n      }\n    } catch (error) {\n      console.error('Validation failed:', error);\n    }\n  };\n\n  const handleGraphUpdate = (nodes: any[]) => {\n    // Update orchestration state based on graph changes\n    console.log('Graph updated with nodes:', nodes);\n  };\n\n  if (loading) {\n    return (\n      <div style={{ \n        display: 'flex', \n        justifyContent: 'center', \n        alignItems: 'center', \n        height: '100vh' \n      }}>\n        <div>Loading...</div>\n      </div>\n    );\n  }\n\n  return (\n    <DndProvider backend={HTML5Backend}>\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1>🎯 Orchestration Graph Scheduler</h1>\n          <span className={isConnected ? 'connected' : 'disconnected'}>\n            Backend: {isConnected ? '✅ Connected' : '❌ Disconnected'}\n          </span>\n        </header>\n        \n        <Toolbar\n          onSave={handleSave}\n          onLoad={handleLoad}\n          onPrint={handlePrint}\n          onRecommend={handleRecommend}\n          onReset={handleReset}\n          onValidate={handleValidate}\n          totalTime={totalTime}\n          budgetTime={budgetTime}\n        />\n        \n        <div className=\"App-body\">\n          <div className=\"sidebar\">\n            <ActivityLibrary activities={activities} />\n            {orchestrationState && (\n              <GapSelector \n                gaps={orchestrationState.hardGapsList || []}\n                selectedGap={selectedGap}\n                onGapSelect={handleGapSelect}\n              />\n            )}\n            {recommendations.length > 0 && (\n              <RecommendationPanel\n                recommendations={recommendations}\n                onSelectActivity={(idx) => {\n                  console.log('Add activity:', idx);\n                }}\n                onAutoAdd={handleAutoAddFromGap}\n              />\n            )}\n          </div>\n          \n          <div className=\"main-content\">\n            <GraphCanvas \n              onTimeUpdate={setTotalTime}\n              onGraphUpdate={handleGraphUpdate}\n            />\n            <LessonTimeline />\n          </div>\n        </div>\n      </div>\n    </DndProvider>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}