{"ast":null,"code":"var _jsxFileName = \"/Users/jules/Desktop/orchestration-graph-web/frontend/src/components/GraphCanvas.tsx\",\n  _s = $RefreshSig$();\n// frontend/src/components/GraphCanvas.tsx\nimport React, { useCallback, useState, useRef } from 'react';\nimport ReactFlow, { ReactFlowProvider, addEdge, useNodesState, useEdgesState, Controls, Background, MiniMap } from 'reactflow';\nimport 'reactflow/dist/style.css'; // CRITICAL: Required CSS for ReactFlow\nimport { useDrop } from 'react-dnd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GraphCanvasInner = () => {\n  _s();\n  const reactFlowWrapper = useRef(null);\n  const [nodes, setNodes, onNodesChange] = useNodesState([]);\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\n  const [reactFlowInstance, setReactFlowInstance] = useState(null);\n  const [nextNodeId, setNextNodeId] = useState(1);\n  const onConnect = useCallback(params => {\n    setEdges(eds => addEdge(params, eds));\n  }, [setEdges]);\n  const onInit = useCallback(instance => {\n    setReactFlowInstance(instance);\n  }, []);\n  const [{\n    isOver\n  }, drop] = useDrop(() => ({\n    accept: 'activity',\n    drop: (item, monitor) => {\n      const offset = monitor.getClientOffset();\n      if (offset && reactFlowWrapper.current && reactFlowInstance) {\n        const bounds = reactFlowWrapper.current.getBoundingClientRect();\n        // Convert screen coordinates to flow coordinates\n        const position = reactFlowInstance.project({\n          x: offset.x - bounds.left,\n          y: offset.y - bounds.top\n        });\n        addNode(item, position);\n      }\n    },\n    collect: monitor => ({\n      isOver: !!monitor.isOver()\n    })\n  }));\n  const addNode = (activity, position) => {\n    const newNode = {\n      id: `node-${nextNodeId}`,\n      type: 'default',\n      position: position,\n      data: {\n        label: activity.name,\n        ...activity\n      },\n      style: {\n        background: activity.color,\n        color: '#fff',\n        border: '1px solid #222',\n        width: 180\n      }\n    };\n    setNodes(nds => [...nds, newNode]);\n    setNextNodeId(nextNodeId + 1);\n  };\n\n  // Combine refs for both drag-drop and ReactFlow wrapper\n  const combinedRef = useCallback(node => {\n    reactFlowWrapper.current = node;\n    drop(node);\n  }, [drop]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"graph-canvas\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Orchestration Graph\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: combinedRef,\n      style: {\n        height: '500px',\n        border: '1px solid #ccc',\n        backgroundColor: isOver ? '#f0f0f0' : '#fff'\n      },\n      children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n        nodes: nodes,\n        edges: edges,\n        onNodesChange: onNodesChange,\n        onEdgesChange: onEdgesChange,\n        onConnect: onConnect,\n        onInit: onInit,\n        fitView: true,\n        children: [/*#__PURE__*/_jsxDEV(Background, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MiniMap, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n\n// Wrap with ReactFlowProvider\n_s(GraphCanvasInner, \"AbTkoE6hm3DVYU8ehByKrgUtbww=\", false, function () {\n  return [useNodesState, useEdgesState, useDrop];\n});\n_c = GraphCanvasInner;\nconst GraphCanvas = () => {\n  return /*#__PURE__*/_jsxDEV(ReactFlowProvider, {\n    children: /*#__PURE__*/_jsxDEV(GraphCanvasInner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n};\n_c2 = GraphCanvas;\nexport default GraphCanvas;\nvar _c, _c2;\n$RefreshReg$(_c, \"GraphCanvasInner\");\n$RefreshReg$(_c2, \"GraphCanvas\");","map":{"version":3,"names":["React","useCallback","useState","useRef","ReactFlow","ReactFlowProvider","addEdge","useNodesState","useEdgesState","Controls","Background","MiniMap","useDrop","jsxDEV","_jsxDEV","GraphCanvasInner","_s","reactFlowWrapper","nodes","setNodes","onNodesChange","edges","setEdges","onEdgesChange","reactFlowInstance","setReactFlowInstance","nextNodeId","setNextNodeId","onConnect","params","eds","onInit","instance","isOver","drop","accept","item","monitor","offset","getClientOffset","current","bounds","getBoundingClientRect","position","project","x","left","y","top","addNode","collect","activity","newNode","id","type","data","label","name","style","background","color","border","width","nds","combinedRef","node","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","height","backgroundColor","fitView","_c","GraphCanvas","_c2","$RefreshReg$"],"sources":["/Users/jules/Desktop/orchestration-graph-web/frontend/src/components/GraphCanvas.tsx"],"sourcesContent":["// frontend/src/components/GraphCanvas.tsx\nimport React, { useCallback, useState, useRef } from 'react';\nimport ReactFlow, {\n  ReactFlowProvider,\n  addEdge,\n  useNodesState,\n  useEdgesState,\n  Controls,\n  Background,\n  MiniMap,\n  Node,\n  Edge,\n  Connection,\n  ReactFlowInstance,\n} from 'reactflow';\nimport 'reactflow/dist/style.css';  // CRITICAL: Required CSS for ReactFlow\nimport { useDrop } from 'react-dnd';\nimport { Activity } from '../types';\n\nconst GraphCanvasInner: React.FC = () => {\n  const reactFlowWrapper = useRef<HTMLDivElement>(null);\n  const [nodes, setNodes, onNodesChange] = useNodesState<Node[]>([]);\n  const [edges, setEdges, onEdgesChange] = useEdgesState<Edge[]>([]);\n  const [reactFlowInstance, setReactFlowInstance] = useState<ReactFlowInstance | null>(null);\n  const [nextNodeId, setNextNodeId] = useState(1);\n\n  const onConnect = useCallback(\n    (params: Connection) => {\n      setEdges((eds) => addEdge(params, eds));\n    },\n    [setEdges]\n  );\n\n  const onInit = useCallback((instance: ReactFlowInstance) => {\n    setReactFlowInstance(instance);\n  }, []);\n\n  const [{ isOver }, drop] = useDrop(() => ({\n    accept: 'activity',\n    drop: (item: Activity, monitor) => {\n      const offset = monitor.getClientOffset();\n      if (offset && reactFlowWrapper.current && reactFlowInstance) {\n        const bounds = reactFlowWrapper.current.getBoundingClientRect();\n        // Convert screen coordinates to flow coordinates\n        const position = reactFlowInstance.project({\n          x: offset.x - bounds.left,\n          y: offset.y - bounds.top,\n        });\n        addNode(item, position);\n      }\n    },\n    collect: (monitor) => ({\n      isOver: !!monitor.isOver(),\n    }),\n  }));\n\n  const addNode = (activity: Activity, position: { x: number; y: number }) => {\n    const newNode: Node = {\n      id: `node-${nextNodeId}`,\n      type: 'default',\n      position: position,\n      data: { \n        label: activity.name,\n        ...activity \n      },\n      style: {\n        background: activity.color,\n        color: '#fff',\n        border: '1px solid #222',\n        width: 180,\n      },\n    };\n\n    setNodes((nds: Node[]) => [...nds, newNode]);\n    setNextNodeId(nextNodeId + 1);\n  };\n\n  // Combine refs for both drag-drop and ReactFlow wrapper\n  const combinedRef = useCallback(\n    (node: HTMLDivElement | null) => {\n      reactFlowWrapper.current = node;\n      drop(node);\n    },\n    [drop]\n  );\n\n  return (\n    <div className=\"graph-canvas\">\n      <h2>Orchestration Graph</h2>\n      <div \n        ref={combinedRef}\n        style={{ \n          height: '500px', \n          border: '1px solid #ccc', \n          backgroundColor: isOver ? '#f0f0f0' : '#fff' \n        }}\n      >\n        <ReactFlow\n          nodes={nodes}\n          edges={edges}\n          onNodesChange={onNodesChange}\n          onEdgesChange={onEdgesChange}\n          onConnect={onConnect}\n          onInit={onInit}\n          fitView\n        >\n          <Background />\n          <Controls />\n          <MiniMap />\n        </ReactFlow>\n      </div>\n    </div>\n  );\n};\n\n// Wrap with ReactFlowProvider\nconst GraphCanvas: React.FC = () => {\n  return (\n    <ReactFlowProvider>\n      <GraphCanvasInner />\n    </ReactFlowProvider>\n  );\n};\n\nexport default GraphCanvas;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}